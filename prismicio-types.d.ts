// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/types";
import type * as prismicClient from "@prismicio/client";

type Simplify<T> = {
  [KeyType in keyof T]: T[KeyType];
};
/** Content for Page documents */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismic.KeyTextField;
}
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<PageDocumentData>, "page", Lang>;
export type AllDocumentTypes = PageDocument;
/**
 * Primary content in ImagesHero → Primary
 *
 */
interface ImagesHeroSliceDefaultPrimary {
  /**
   * Header field in *ImagesHero → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: images_hero.primary.header
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  header: prismic.KeyTextField;
}
/**
 * Item in ImagesHero → Items
 *
 */
export interface ImagesHeroSliceDefaultItem {
  /**
   * Background Images field in *ImagesHero → Items*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: images_hero.items[].background_images
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  background_images: prismic.RelationField;
}
/**
 * Default variation for ImagesHero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImagesHeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImagesHeroSliceDefaultPrimary>,
  Simplify<ImagesHeroSliceDefaultItem>
>;
/**
 * Slice variation for *ImagesHero*
 *
 */
type ImagesHeroSliceVariation = ImagesHeroSliceDefault;
/**
 * ImagesHero Shared Slice
 *
 * - **API ID**: `images_hero`
 * - **Description**: `ImagesHero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImagesHeroSlice = prismic.SharedSlice<
  "images_hero",
  ImagesHeroSliceVariation
>;
/**
 * Primary content in Loading → Primary
 *
 */
interface LoadingSliceDefaultPrimary {
  /**
   * Title field in *Loading → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: loading.primary.title
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismic.KeyTextField;
}
/**
 * Default variation for Loading Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Default`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type LoadingSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<LoadingSliceDefaultPrimary>,
  never
>;
/**
 * Slice variation for *Loading*
 *
 */
type LoadingSliceVariation = LoadingSliceDefault;
/**
 * Loading Shared Slice
 *
 * - **API ID**: `loading`
 * - **Description**: `Loading`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type LoadingSlice = prismic.SharedSlice<
  "loading",
  LoadingSliceVariation
>;
declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismicClient.ClientConfig
    ): prismicClient.Client<AllDocumentTypes>;
  }
  namespace Content {
    export type {
      PageDocumentData,
      PageDocument,
      AllDocumentTypes,
      ImagesHeroSliceDefaultPrimary,
      ImagesHeroSliceDefaultItem,
      ImagesHeroSliceDefault,
      ImagesHeroSliceVariation,
      ImagesHeroSlice,
      LoadingSliceDefaultPrimary,
      LoadingSliceDefault,
      LoadingSliceVariation,
      LoadingSlice,
    };
  }
}
